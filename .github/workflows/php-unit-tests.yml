name: PHP unit tests
on:
  push:
  pull_request:

jobs:

  tests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    container: library/php 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 3
          submodules: recursive

      - name: Configure environment
        run: |
          cd baserepo
          echo COLUMNS=120 >> $GITHUB_ENV
          php -r "print_r(implode(', ', get_loaded_extensions()));"

          git config --global user.email ""
          git config --global user.name "Symfony"
          git config --global init.defaultBranch main
          git config --global advice.detachedHead false

          COMPOSER_HOME="$(composer config home)"
          ([ -d "$COMPOSER_HOME" ] || mkdir "$COMPOSER_HOME") && cp .github/composer-config.json "$COMPOSER_HOME/config.json"

          SYMFONY_VERSION=$(grep ' VERSION = ' src/Symfony/Component/HttpKernel/Kernel.php | cut -d "'" -f2 | cut -d '.' -f 1-2)
          php .github/build-packages.php HEAD^ $SYMFONY_VERSION src/Symfony/Bridge/PhpUnit

          composer update --no-progress --ansi
          ./phpunit install

      - name: Run tests
        run: |
          cd baserepo
          _run_tests() {
            local ok=0
            local title="$1$FLIP"
            OUTPUT=$(bash -xc "$2" 2>&1) || ok=$?
            if [[ $ok -ne 0 ]]; then
              printf "::group::%-80s\e[31m%10s\e[0m\n" $title 'FAIL'
              echo "$OUTPUT"
              echo "::endgroup::"
            else
              printf "%-80s\e[32m%10s\e[0m\n" $title 'OK'
            fi
          }
          export -f _run_tests

          COMPONENTS=$(find src/Symfony -mindepth 2 -type f -name phpunit.xml.dist | xargs -I{} dirname {})
          PHPUNIT="$(pwd)/phpunit --exclude-group tty,benchmark,intl-data,integration"

          echo "$COMPONENTS" | xargs -n1 | parallel -j +3 "_run_tests {} '$PHPUNIT {}'"
